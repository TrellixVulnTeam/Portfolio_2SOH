{"ast":null,"code":"import _slicedToArray from\"/Users/william/Desktop/Projects/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export default function FadeInSection(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isVisible=_React$useState2[0],setVisible=_React$useState2[1];var domRef=React.useRef();React.useEffect(function(){var observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){return setVisible(entry.isIntersecting);});});observer.observe(domRef.current);},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"fade-in-section \".concat(isVisible?'is-visible':''),ref:domRef,style:props.style,children:props.children});}","map":{"version":3,"sources":["/Users/william/Desktop/Projects/portfolio/src/components/fading.jsx"],"names":["React","FadeInSection","props","useState","isVisible","setVisible","domRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","current","style","children"],"mappings":"4HACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CACzC,oBAAgCF,KAAK,CAACG,QAAN,CAAe,KAAf,CAAhC,oDAAOC,SAAP,qBAAkBC,UAAlB,qBACA,GAAMC,CAAAA,MAAM,CAAGN,KAAK,CAACO,MAAN,EAAf,CACAP,KAAK,CAACQ,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,oBAAJ,CAAyB,SAAAC,OAAO,CAAI,CACnDA,OAAO,CAACC,OAAR,CAAgB,SAAAC,KAAK,QAAIR,CAAAA,UAAU,CAACQ,KAAK,CAACC,cAAP,CAAd,EAArB,EACD,CAFgB,CAAjB,CAGAL,QAAQ,CAACM,OAAT,CAAiBT,MAAM,CAACU,OAAxB,EACD,CALD,CAKG,EALH,EAMA,mBACE,YACE,SAAS,2BAAqBZ,SAAS,CAAG,YAAH,CAAkB,EAAhD,CADX,CAEE,GAAG,CAAEE,MAFP,CAEe,KAAK,CAAEJ,KAAK,CAACe,KAF5B,UAIGf,KAAK,CAACgB,QAJT,EADF,CAQD","sourcesContent":["\nimport React from 'react';\n\nexport default function FadeInSection(props) {\n    const [isVisible, setVisible] = React.useState(false);\n    const domRef = React.useRef();\n    React.useEffect(() => {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => setVisible(entry.isIntersecting));\n      });\n      observer.observe(domRef.current);\n    }, []);\n    return (\n      <div\n        className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n        ref={domRef} style={props.style} \n      >\n        {props.children}\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}